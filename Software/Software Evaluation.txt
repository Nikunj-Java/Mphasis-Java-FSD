*********************************************************************************************
Software Evolution
*********************************************************************************************
1. Documentation: Enlist Requirenment for a software 
2. Developement: Developer Prepares the Software According to the requirement
3. Testing: This Software must be shared with users to take feedback and if it has error it      must be updated to match the requirement

NECESSITY OF SOTWARE EVOLUTION:
	- Change in requirement with time
	- Environment change
	- Erros and Bugs
	- Security and Risk
	- Must Have New Functionality and Features
	

Stage Of Software Development Life Cycle (SDLC):
	- it has Five stages
	1. Requirement
		- gathering information from customer or from the user.
		- engineer communicates with the client and end-user to know their Idea and 		  about the feature of software
	2. Software Design
		-it is a process in which engineer transfer requirement into working model
		-it help programmer in software coading.
		-it will will make the proccess easy.
		-there are  three types of Software Designing
			A. ARCHITECTURAL DESIGN: Highest Version of System
			B. HIGH-LEVEL DESIGN: focus on how sytem and component implemented
			C. DETAILED DESIGN: it focus on the logical structure of each module 				and its interface to communicate with each module
		
	3. Developing Product
		- it is crucial part of SDLC.
		- it is also known as Implementation Phase
	4. Testing and Integration
		- in this stage we will integrate the modules and will test the overall 		  product by using different technology
	5. Developement and Maintanance
		- When Final Product is Deployed , we will do maintainance of product for any 		  future update  and releases of new features

*********************************************************************************************
SOFTWARE DEVELOPEMENT PROCESS(SDP)
*********************************************************************************************

it consisting of Four kEY PROCESS
1. SPECIFICATION
2. DEVELOPMENT
3. VALIDATION
4. EVOLUTION


	1. SPECIFICATION (SRS- SOFTWARE REQUIRMENT SPECIFICATION)
	- it is a foundation of any software
	- it contains the list of user requrements for a system as well as detailed 	  decription of system requirements
	- it contains the flow of software
	- it explains how the software will work
	- it help developer to build fully functional software
	2. DEVELOPEMENT:
	- it is second level of SDP	
	- in this level developer developes a software accorind to clients requirement
	- it is totally based on Specification.
	3. VALIDATION:
	- it is process of checking whether the software product is up to the mark or in 	  other words product has high level requirements.
	- it is the process of checking the validity of the product
	- it is validation of the actual and expected product
	4. EVOLUTION:
	- The term Evolution it self it describes development
	- initially and then periodically updating a software for various reason is required
	- to add a new feature or to remove old feature or a bug, the evolution process  is needed
	- it includes
		a. CHANGE ANALYSIS
		b. RELEASE PLANNING
		c. SYSTEM IMPLEMENTATION
		d. RELEASE TO THE CUSTOMER
	-NECESSITY OF SOTWARE EVOLUTION:
		a. Change in requirement with time
		b. Environment change
		c. Erros and Bugs
		d. Security and Risk
		e. Must Have New Functionality and Features



*********************************************************************************************
What is Scrum in AGILE?
*********************************************************************************************

- SCRUM is an agile developement process focused on ways to manage task in team-based    development conditions

- there are three roles in it. and their responsibilities are:
	1. SCRUM MASTER
		- the scrum master can set up master team , arrange the meeting and remove 		  the obstacle for the process
		- scrum masters are the falicitator of scrum, the lightweight agile framework 		  with a focus on time-boxed iterations called SPRINT
		- SRCUM MASTER act as a coaches to the rest of team.
		- SERVENT LEADER as the Scrum Guide puts it.
		- good scrum master are committed to the scrum foundation
		- but remain flexible and open to opportunities for the team to improve their 
		  workflow

		ROLES AND RESPONSIBILITIES:
		----------------------------
		a. STANDUPS: falicitate daily standups (for daily scrum) meeting as needed				(10-15 minutes max time)

		b. SPRINT PLANNING : Protect the team from over commiting and scope creep.
		
		c. SPRINT REVIEWS: Participates in the meeting and capture feedback
		d. RETROSPECTIVE: Note areas of improvement and action items for future 		   sprints
		e. BOARD ADMINISTRATION: work as administrator of the Scrum board. ensure 		   	   that Cards are up to date and use SCRUM TOOL- JIRA SOTWARE 
		f. ONE-ON-ONE: meets indivudually with team members  and stackeholders as 		   needed

	2. PRODUCT OWNER
		- the product owner  makes product backlog, prioritizes the delay and is 		  	  responsible for the distribution of functionality on each repetaition
		

		ROLES AND RESPONSIBILITIES:
		----------------------------
		a. manage product backlog
		b. Prioterize and order the product backlog in the right manner so that the 		   important task are given topmost priority
		c. prioterize work items and product backlog , this must be done in line with 		   customer vision and goals
		d. product owner ensure that product backlog is communicated clearly to all 		   team members
		e. the scrum team must have clarity on thhe product requrements and user 		   expecations
		f. must have Leadership and Communication Skills
		g. Maximise the value of product(product prepared in short time)
		h. Effective Interpretation of Customer Requirements.
		i. must act as primary point of contact
		j. Communicating Customer Vision
		k. must have market industry experience so that a product owner can 		   		   anticipate customer needs.
		l. Evaluation Progress- must monitor each phase of developement cycle and can 		   suggest changes if required
		m.
		

	3. SCRUM TEAM	
		- the team manages its work and organizes the work to complete the sprint or 		  	  cycle
		- also known as developement team
		- it is always small
		- it is consisting of skilled and professionals who do the hands-on work of 		  completing the task in scrum sprint.
		- this means that developement team memebers can be engineers, designers , 		  writers, data analysts ,or any other role needed to reach sprint goals.
		- this team doesn.t just wait for orders; they usually colloborate to map out 		  goals and plans for achieving them
		- not all developement  team members will always have same responsibilities.
		- for eg: if you are updating a website you might have a front -end -		  engineer, UX designer, copywritter and marketing professional and all 		  working on the same scrum team.
		- the responsibility of developmenet team will also depends on the end golas 		  of the scrum team.
		


*********************************************************************************************
		DIFFRENCE BETWEEN SCRUM MASTER AND PRODUCT OWNER
*********************************************************************************************
			SCRUM MASTER		| 	PRODUCT OWNER
---------------------------------------------------------------------------------------------
A. Srum master is an expert in agile practice   | A. product owner is around project
B. Scrum master ensure all messages		| B. product owner support the team with 
   And communication was done in right manner	|    updates and new change if required
---------------------------------------------------------------------------------------------





WHEN TO USE??
- when frequent changes are required
- when highly qualified and experience team is available
- when customer is ready to have a meeting with a software team all the time

DISADVANTAGES:

- Due to the lack of formal documentation, it creates confusion and crucial decision taken      throughout various phases can be misinterpreted at any time by different team members
- once the project is completed and the developers allotted to another project, maintenance   of the finished project can become difficult